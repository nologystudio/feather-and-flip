<?php

/*
*
*	Sabre Services Connection
*
*
*/

//if (empty(arg(0)))
  //  sabre_services_soap_test();
    //module_invoke_all('test');

/**
 * Tests wsclient connections
 *
 *
 */
function sabre_services_test()
{
	if (module_exists('wsclient')):
		$cid = base64_encode(variable_get('sabre_client_id'));
		$cse = base64_encode(variable_get('sabre_client_secret'));
		$tok = base64_encode($cid.':'.$cse);

		$service = wsclient_service_load('sabre__rest');
		$service->settings['http_headers'] = array(
			'Content-Type' => array('application/x-www-form-urlencoded'),
			'Authorization' => array('Basic '.$tok)
		);
		$service->settings['curl options'] = array(
			CURLOPT_POSTFIELDS => 'grant_type=client_credentials'
		);
		// $service->operations['sabre__rest_get_token']['parameter']['grant_type']['value'] = 'client_credentials';
		// $service->global_parameters = array(
		// 	'grant_type' => array(
		// 		'type' => 'text',
		// 		'default value' => array('client_credentials'))
		// );

		// $service->settings['authentication']['basic'] = array(
		// 	'username'		 => 'V1:ff06skusw6cvjpsn:DEVCENTER:EXT',
		// 	'password'	 => 'l7x7MrWB'
		// );
		// $service->settings['authentication']['oauth2'] = array(
		// 	'token_endpoint' => 'https://api.sabre.com/v1/auth/token',
		// 	'auth_flow'		 => 'client-credentials',
		// 	'client_id'		 => $cid,
		// 	'client_secret'	 => $cse
		// );

		//$service = wsclient_service_load('CreateSession');

		try {
			$token_res = $service->sabre__rest_get_token();
			dpm($token_res);		
		} catch (Exception $e) {
			dpm($e->getMessage());
			dpm($service);
		}



		dpm($cid);
		dpm($cse);
		dpm($tok);
	endif;
}

function sabre_services_soap_test()
{
	if (module_exists('wsclient'))
	{
		$sabreService = new Sabre;
		$star = '2015-06-01';
		$end = '2015-06-05';
		$hotelCode = '0050313';
		$roomTypes[] = array('numunit' => 1, 'code' => 'C1KPR8');
		$numPersonas = 2;
        //$codes = Hotel::GetHotelCodesByDestination(30);
        //dpm($codes);
        //$response = $sabreService->ListHotelDescription($codes['sabre'],$numPersonas,$star,$end);
        //dpm($response);
		//dpm($sabreService->HotelDescription($hotelCode, $numPersonas, $star, $end));

		//try {
            //$sessionInfo = $sabreService->CreateSession();
            //$hotelInfo = $sabreService->HotelDescription($sessionInfo, $hotelCode, $numPersonas, $star, $end);
            //$result = $sabreService->TravelItineraryAddInfo($sessionInfo, 'Prueba', 'esto es una prueba');
        //$codes = Hotel::GetHotelCodesByDestination(30);

        //$result = $sabreService->ListHotelAvail($codes['sabre'],$numPersonas,$star,$end);
        //dpm($result);

        $sessionInfo = $sabreService->CreateSession();

        try {
            $result = $sabreService->HotelDescription($sessionInfo,$hotelCode, $numPersonas, $star, $end);
            dpm($result);

            //$result = $sabreService->TravelItineraryRead($sessionInfo);
            //dpm($result);

            $result = $sabreService->HotelBookReservation($sessionInfo,$roomTypes,'0050313',$numPersonas, $star, $end );
            dpm($result);
        }
        catch(Exception $e){}
        finally{ $sabreService->CloseSession($sessionInfo['SecurityToken'],$sessionInfo['ConversationId']); }

        //$res = Expedia::GetHotelsByCode($codes['expedia'],'12/01/2015', '12/05/2015', $numPersonas, 0);
        //dpm($res);


            //$result = $sabreService->EndTransaction($sessionInfo);
            //dpm($result);
            //$result = $sabreService->TravelItineraryRead($sessionInfo);
            //dpm($result);
        //}
        //finally {
        //    $sabreService->CloseSession($sessionInfo['SecurityToken'], $sessionInfo['ConversationId']);
        //}

		//dpm($result);
		//$sabreService->HotelAvail('LGA','', 2, $star, $end);
		//$result = $sabreService->HotelDescription('0005485', 3, $star, $end);
		//dpm($result);
		//$sabreService->HotelBookReservation($roomTypes, $hotelCode, $numPersonas, $star, $end);
	}
}

/**
 * Implements hook_permission.
 */
function sabre_services_permission() {
  return array(
    'sabre_services module' => array(
      'title' => t('Sabre Services permission'),
  ));
}

/**
 * Implements hook_menu().
 */
function sabre_services_menu() {
	$items = array();
	$items['admin/config/services/sabre'] = array(
		'title' => 'Sabre Services Configuration',
		'description' => 'Configuration sabre services connection',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('sabre_services_form'),
		'access arguments' => array('sabre_services module'),
		'type' => MENU_NORMAL_ITEM,
	);

	return $items;
}

/**
 * Page callback: Sabre Services settings
 *
 * @see sabre_services_menu()
 */
function sabre_services_form($form, &$form_state) {

	// Sabre API group data
	$form['apidata'] = array(
		'#type' => 'fieldset',
		'#title' => t('Api Data'),
		'#collapsible' => TRUE,
		'#collapsed' => TRUE,
	);
	$form['apidata']['sabre_app_name'] = array(
		'#type'          => 'textfield',
		'#title'         => t('Sabre: Application name'),
		'#default_value' => variable_get('sabre_app_name'),
		'#description'   => t("Sabre app name."),
		'#required' => TRUE
	);
	$form['apidata']['sabre_client_id'] = array(
		'#type'          => 'textfield',
		'#title'         => t('Sabre: Client ID'),
		'#default_value' => variable_get('sabre_client_id'),
		'#description'   => t("Sabre app client ID."),
		'#required' => TRUE
	);
	$form['apidata']['sabre_client_secret'] = array(
		'#type'          => 'textfield',
		'#title'         => t('Sabre: Client secret'),
		'#default_value' => variable_get('sabre_client_secret'),
		'#description'   => t("Sabre app client secret."),
		'#required' => TRUE
	);
	// Sabre Authentication group data
	$form['authdata'] = array(
		'#type' => 'fieldset',
		'#title' => t('Authentication Data'),
		'#collapsible' => TRUE,
		'#collapsed' => TRUE,
	);
	$form['authdata']['sabre_ipcc'] = array(
		'#type'          => 'textfield',
		'#title'         => t('Sabre: IPCC code'),
		'#default_value' => variable_get('sabre_ipcc'),
		'#description'   => t("Sabre IPCC code."),
		'#required' => TRUE
	);
	$form['authdata']['sabre_username'] = array(
		'#type'          => 'textfield',
		'#title'         => t('Sabre: Username'),
		'#default_value' => variable_get('sabre_username'),
		'#description'   => t("Sabre Username."),
		'#required' => TRUE
	);
	$form['authdata']['sabre_passw'] = array(
		'#type'          => 'textfield',
		'#title'         => t('Sabre: Password'),
		'#default_value' => variable_get('sabre_passw'),
		'#description'   => t("Sabre Password."),
		'#required' => TRUE
	);
	// PCC & ARC codes
	$form['sabre_pcc_code'] = array(
		'#type'          => 'textfield',
		'#title'         => t('Sabre: PCC code'),
		'#default_value' => variable_get('sabre_pcc_code'),
		'#description'   => t("Sabre PCC code."),
		'#required' => TRUE
	);
	$form['sabre_arc_code'] = array(
		'#type'          => 'textfield',
		'#title'         => t('Sabre: ARC code'),
		'#default_value' => variable_get('sabre_arc_code'),
		'#description'   => t("Sabre ARC code."),
		'#required' => TRUE
	);
	$form['sabre_test_mode'] = array(
		'#type'          => 'select',
		'#title'         => t('Sabre: Test mode'),
		'#options' 	 => array(
				 	   0 => t('No'),
				           1 => t('Yes'),
				        ),		
		'#default_value' => variable_get('sabre_test_mode'),
		'#description'   => t("Use the web service testing Sabre"),
		'#required' => TRUE
	);	

  return system_settings_form($form);
}
